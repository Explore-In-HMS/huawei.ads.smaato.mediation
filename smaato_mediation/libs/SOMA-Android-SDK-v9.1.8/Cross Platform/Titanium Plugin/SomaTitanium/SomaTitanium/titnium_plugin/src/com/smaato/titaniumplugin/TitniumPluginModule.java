/**
 * This file was auto-generated by the Titanium Module SDK helper for Android
 * Appcelerator Titanium Mobile
 * Copyright (c) 2009-2013 by Appcelerator, Inc. All Rights Reserved.
 * Licensed under the terms of the Apache Public License
 * Please see the LICENSE included with this distribution for details.
 *
 */
package com.smaato.titaniumplugin;

import org.appcelerator.kroll.KrollModule;
import org.appcelerator.kroll.annotations.Kroll;
import org.appcelerator.kroll.common.Log;
import org.appcelerator.titanium.TiApplication;

import android.view.View;
import android.view.ViewGroup.LayoutParams;

import com.smaato.soma.AdDimension;
import com.smaato.soma.AdListenerInterface;
import com.smaato.soma.AdSettings;
import com.smaato.soma.AdType;
import com.smaato.soma.BannerStateListener;
import com.smaato.soma.BannerView;
import com.smaato.soma.CrashReportTemplate;
import com.smaato.soma.debug.Debugger;
import com.smaato.soma.exception.BannerHeightForAdDimensionFailed;
import com.smaato.soma.exception.BannerWidthForAdDimensionFailed;
import com.smaato.soma.internal.requests.settings.UserSettings;

@Kroll.module(name = "TitniumPlugin", id = "com.smaato.titaniumplugin")
public class TitniumPluginModule extends KrollModule {

	// Standard Debugging variables
	private static final String TAG = "TitniumPluginModule";

	private BannerView mBannerView;

	// You can define constants with @Kroll.constant, for example:
	// @Kroll.constant public static final String EXTERNAL_NAME = value;

	public TitniumPluginModule() {
		super();
	}

	@Kroll.onAppCreate
	public static void onAppCreate(TiApplication app) {
		Log.d(TAG, "inside onAppCreate");
		// put module init code that needs to run when the application is
		// created
	}

	// Methods
	@Kroll.method
	public String example() {
		Log.d(TAG, "example called");
		return "hello world";
	}

	// Properties
	@Kroll.getProperty
	public String getExampleProp() {
		Log.d(TAG, "get example property");
		return "hello world";
	}

	@Kroll.setProperty
	public void setExampleProp(String value) {
		Log.d(TAG, "set example property: " + value);
	}

	@Kroll.method
	public View initBannerView() {
		Debugger.setDebugMode(Debugger.Level_3);
		mBannerView = new BannerView(getActivity());

		getActivity().runOnUiThread(new Runnable() {
			@Override
			public void run() {
				getActivity().addContentView(mBannerView,
						new LayoutParams(LayoutParams.FILL_PARENT, 70));
			}
		});
		return mBannerView;
	}

	@Kroll.method
	public int getAutoReloadFrequency() {
		return 0;
	}

	@Kroll.method
	public void setAutoReloadFrequency(final int autoReloadFrequency) {
		if (mBannerView == null) {
			return;
		}
		mBannerView.setAutoReloadFrequency(autoReloadFrequency);
	}

	@Kroll.method
	public void setAutoReloadEnabled(boolean autoReloadEnabled) {
		if (mBannerView == null) {
			return;
		}
		mBannerView.setAutoReloadEnabled(autoReloadEnabled);
	}

	@Kroll.method
	public void setBackgroundColor(final int color) {
		if (mBannerView == null) {
			return;
		}
	}

	@Kroll.method
	public int getBackgroundColor() {
		if (mBannerView == null) {
			return 0;
		}
		return 0;
	}

	@Kroll.method
	public void setBannerStateListener(final BannerStateListener listener) {
		if (mBannerView == null) {
			return;
		}
	}

	@Kroll.method
	public boolean isScalingEnabled() {
		if (mBannerView == null) {
			return false;
		}
		return mBannerView.isScalingEnabled();
	}

	@Kroll.method
	public void setScalingEnabled(boolean mScaleEnabled) {
		if (mBannerView == null) {
			return;
		}
		mBannerView.setScalingEnabled(mScaleEnabled);
	}

	@Kroll.method
	public void addAdListener(final AdListenerInterface adListener) {
		if (mBannerView == null) {
			return;
		}
	}

	@Kroll.method
	public boolean removeAdListener(final AdListenerInterface adListener) {
		if (mBannerView == null) {
			return false;
		}
		return true;
	}

	@Kroll.method
	public void asyncLoadNewBanner() {
		if (mBannerView == null) {
			return;
		}
		mBannerView.asyncLoadNewBanner();
	}

	@Kroll.method
	public void setLocationUpdateEnabled(final boolean updateEnabled) {
		if (mBannerView == null) {
			return;
		}
		mBannerView.setLocationUpdateEnabled(updateEnabled);
	}

	@Kroll.method
	public boolean isLocationUpdateEnabled() {
		if (mBannerView == null) {
			return false;
		}
		return mBannerView.isLocationUpdateEnabled();
	}

	@Kroll.method
	public String getUserGender() {
		return new CrashReportTemplate<String>() {
			@Override
			public String process() throws Exception {
				if (mBannerView == null) {
					return "";
				}
				return UserSettings.Gender.getStringForValue(mBannerView
						.getUserSettings().getUserGender());
			}
		}.execute();
	}

	/**
	 * Sets the value of parameter UserGender to userGender.
	 */
	@Kroll.method
	public void setUserGender(final String userGender) {
		new CrashReportTemplate<Void>() {
			@Override
			public Void process() throws Exception {
				if (mBannerView == null || userGender == null
						|| userGender.length() <= 0) {
					return null;
				}
				mBannerView.getUserSettings().setUserGender(
						UserSettings.Gender.getValueForString(userGender));
				return null;
			}
		}.execute();
	}

	/**
	 * Returns the value of parameter Age.
	 */
	@Kroll.method
	public int getAge() {
		return new CrashReportTemplate<Integer>() {
			@Override
			public Integer process() throws Exception {
				if (mBannerView == null) {
					return null;
				}
				return mBannerView.getUserSettings().getAge();
			}
		}.execute();
	}

	/**
	 * Sets the value of parameter Age to age.
	 */
	@Kroll.method
	public void setAge(final int age) {
		new CrashReportTemplate<Void>() {
			@Override
			public Void process() throws Exception {
				if (mBannerView == null) {
					return null;
				}
				mBannerView.getUserSettings().setAge(age);
				return null;
			}
		}.execute();
	}

	/**
	 * Returns the value of parameter KeywordList.
	 */
	@Kroll.method
	public String getKeywordList() {
		return new CrashReportTemplate<String>() {
			@Override
			public String process() throws Exception {
				if (mBannerView == null) {
					return null;
				}
				return mBannerView.getUserSettings().getKeywordList();
			}
		}.execute();
	}

	/**
	 * Sets the value of parameter KeywordList to keywordList.
	 */
	@Kroll.method
	public void setKeywordList(final String keywordList) {
		new CrashReportTemplate<Void>() {
			@Override
			public Void process() throws Exception {
				if (mBannerView == null) {
					return null;
				}
				mBannerView.getUserSettings().setKeywordList(keywordList);
				return null;
			}
		}.execute();
	}

	/**
	 * Returns the value of parameter SearchQuery.
	 */
	@Kroll.method
	public String getSearchQuery() {
		return new CrashReportTemplate<String>() {
			@Override
			public String process() throws Exception {
				if (mBannerView == null) {
					return null;
				}
				return mBannerView.getUserSettings().getSearchQuery();
			}
		}.execute();
	}

	/**
	 * Sets the value of parameter SearchQuery to searchQuery.
	 */
	@Kroll.method
	public void setSearchQuery(final String searchQuery) {
		new CrashReportTemplate<Void>() {

			@Override
			public Void process() throws Exception {
				if (mBannerView == null) {
					return null;
				}
				mBannerView.getUserSettings().setSearchQuery(searchQuery);
				return null;
			}
		}.execute();
	}

	/**
	 * Returns the value of parameter Region.
	 */
	@Kroll.method
	public String getRegion() {
		return new CrashReportTemplate<String>() {
			@Override
			public String process() throws Exception {
				if (mBannerView == null) {
					return null;
				}
				return mBannerView.getUserSettings().getRegion();
			}
		}.execute();
	}

	/**
	 * Sets the value of parameter Region to region.
	 */
	@Kroll.method
	public void setRegion(final String region) {
		new CrashReportTemplate<Void>() {

			@Override
			public Void process() throws Exception {
				if (mBannerView == null) {
					return null;
				}
				mBannerView.getUserSettings().setRegion(region);
				return null;
			}
		}.execute();
	}

	/**
	 * Returns the value of parameter City.
	 */
	@Kroll.method
	public String getCity() {
		return new CrashReportTemplate<String>() {
			@Override
			public String process() throws Exception {
				if (mBannerView == null) {
					return null;
				}
				return mBannerView.getUserSettings().getCity();
			}
		}.execute();
	}

	/**
	 * Sets the value of parameter City to city.
	 */
	@Kroll.method
	public void setCity(final String city) {
		if (mBannerView == null) {
			return;
		}
		mBannerView.getUserSettings().setCity(city);
	}

	/**
	 * Returns the value of parameter Latitude.
	 */
	@Kroll.method
	public double getLatitude() {
		if (mBannerView == null) {
			return 0;
		}
		return mBannerView.getUserSettings().getLatitude();
	}

	/**
	 * Sets the value of parameter Latitude to latitude.
	 */
	@Kroll.method
	public void setLatitude(final double latitude) {
		if (mBannerView == null) {
			return;
		}
		mBannerView.getUserSettings().setLatitude(latitude);
	}

	/**
	 * Returns the value of parameter Longitude.
	 */
	@Kroll.method
	public double getLongitude() {
		if (mBannerView == null) {
			return 0;
		}
		return mBannerView.getUserSettings().getLongitude();
	}

	/**
	 * Sets the value of parameter Longitude to longitude.
	 */
	@Kroll.method
	public void setLongitude(final double longitude) {
		if (mBannerView == null) {
			return;
		}
		mBannerView.getUserSettings().setLongitude(longitude);
	}

	/**
	 * Returns the value of parameter userProfileEnabled.
	 */
	@Kroll.method
	public boolean getuserProfileEnabled() {
		if (mBannerView == null) {
			return true;
		}
		return mBannerView.getUserSettings().getuserProfileEnabled();
	}

	/**
	 * Sets the value of parameter userProfileEnabled to userProfileEnabled.
	 */
	@Kroll.method
	public void setuserProfileEnabled(final boolean userProfileEnabled) {
		if (mBannerView == null) {
			return;
		}
		mBannerView.getUserSettings().setuserProfileEnabled(userProfileEnabled);
	}

	/**
	 * Use to activate or deactivate COPPA (Children's Online Privacy Protection
	 * Act) parameter.
	 * 
	 * @param value
	 *            <code>true</code> to enable, <code>false</code> otherwise.
	 */
	@Kroll.method
	public void setCOPPA(boolean value) {
		if (mBannerView == null) {
			return;
		}
		mBannerView.getUserSettings().setCOPPA(value);
	}

	/**
	 * Returns the value of COPPA (Children's Online Privacy Protection Act)
	 * parameter.
	 * 
	 * @return <code>1</code> if activated, <code>0</code> otherwise.
	 */
	@Kroll.method
	public int isCOPPA() {
		if (mBannerView == null) {
			return 0;
		}
		return mBannerView.getUserSettings().isCOPPA();
	}

	@Kroll.method
	int getPublisherId() {
		if (mBannerView == null) {
			return 0;
		}
		return mBannerView.getAdSettings().getPublisherId();
	}

	/**
	 * Sets the value of parameter PublisherId to publisherId. Default value of
	 * 0 will return a test banner.
	 */
	@Kroll.method
	void setPublisherId(int publisherId) {
		if (mBannerView == null) {
			return;
		}
		mBannerView.getAdSettings().setPublisherId(publisherId);
	}

	/**
	 * Returns the value of parameter AdspaceId. Default value of 0 will return
	 * a test banner.
	 */
	@Kroll.method
	int getAdspaceId() {
		if (mBannerView == null) {
			return 0;
		}
		return mBannerView.getAdSettings().getAdspaceId();
	}

	/**
	 * Sets the value of parameter AdspaceId to adspaceId. Default value of 0
	 * will return a test banner.
	 */
	@Kroll.method
	void setAdspaceId(int adspaceId) {
		if (mBannerView == null) {
			return;
		}
		mBannerView.getAdSettings().setAdspaceId(adspaceId);
	}

	/**
	 * Returns the value of parameter AdType.
	 */
	@Kroll.method
	AdType getAdType() {
		if (mBannerView == null) {
			return null;
		}
		return mBannerView.getAdSettings().getAdType();
	}

	/**
	 * Sets the value of parameter AdType to adType.
	 */
	@Kroll.method
	void setAdType(AdType adType) {
		mBannerView.getAdSettings().setAdType(adType);
	}

	/**
	 * Returns the value of parameter AdDimension.
	 */
	@Kroll.method
	AdDimension getAdDimension() {
		return mBannerView.getAdSettings().getAdDimension();
	}

	/**
	 * Sets the value of parameter AdDimension to adDimension.
	 */
	@Kroll.method
	void setAdDimension(AdDimension adDimension) {
		mBannerView.getAdSettings().setAdDimension(adDimension);
	}

	/**
	 * Returns the value of parameter bannerWidth. Width of the banner.
	 * 
	 * @throws BannerWidthForAdDimensionFailed
	 */
	@Kroll.method
	int getBannerWidth() {
		return new CrashReportTemplate<Integer>() {
			@Override
			public Integer process() throws Exception {
				return mBannerView.getAdSettings().getBannerWidth();
			}
		}.execute();
	}

	/**
	 * Sets the value of parameter bannerWidth to bannerWidth. Width of the
	 * banner.
	 */
	@Kroll.method
	void setBannerWidth(int bannerWidth) {
		mBannerView.getAdSettings().setBannerWidth(bannerWidth);
	}

	/**
	 * Returns the value of parameter bannerHeight. Height of the banner.
	 * 
	 * @throws BannerHeightForAdDimensionFailed
	 */
	@Kroll.method
	int getBannerHeight() {
		return new CrashReportTemplate<Integer>() {
			@Override
			public Integer process() throws Exception {
				return mBannerView.getAdSettings().getBannerHeight();
			}
		}.execute();
	}

	/**
	 * Sets the value of parameter bannerHeight to bannerHeight. Height of the
	 * banner.
	 */
	@Kroll.method
	void setBannerHeight(int bannerHeight) {
		mBannerView.getAdSettings().setBannerHeight(bannerHeight);
	}

}
